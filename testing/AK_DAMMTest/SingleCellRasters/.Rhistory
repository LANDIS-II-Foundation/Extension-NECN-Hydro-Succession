input_dir<-setwd("C:/Users/lucash/Documents/DoD_Runs/Landscape")
library(raster)
w_dir<-"I:/Research/Shares/lucash_lab/Lucash/LANDIS_Input_Files/ExampleFile_SC/SingleCellRasters/"
setwd(w_dir)
IC_map_name<-"singlecell_point16.tif"
ecoregion_map_raster<-raster(paste(w_dir,IC_map_name,sep=""))
IC_map_df<-as.data.frame(ecoregion_map_raster)
IC_map_df[is.na(IC_map_df),]<- 0.887732743248389
proj<-projection(IC_map_raster)#projection of landis input file.
library(raster)
w_dir<-"I:/Research/Shares/lucash_lab/Lucash/LANDIS_Input_Files/ExampleFile_SC/SingleCellRasters/"
setwd(w_dir)
w_dir<-"I:/Research/Shares/lucash_lab/Lucash/LANDIS_Input_Files/ExampleFile_SC_DAMM/SingleCellRasters/"
setwd(w_dir)
IC_map_name<-"singlecell_point16.tif"
ecoregion_map_raster<-raster(paste(w_dir,IC_map_name,sep=""))
IC_map_df<-as.data.frame(ecoregion_map_raster)
IC_map_df[is.na(IC_map_df),]<- 0.887732743248389
proj<-projection(IC_map_raster)#projection of landis input file.
biomass_out_unlist <- as.numeric(unlist(IC_map_df))#unlist the attribute table so that the next step will become a double matrix.
output_matrix<-matrix(biomass_out_unlist,nrow=nrow(ecoregion_map_raster),ncol=ncol(ecoregion_map_raster),byrow=T)#first turn attribute table to double matrix
new_output_raster<-raster(output_matrix,xmn=xmin(ecoregion_map_raster),ymn=ymin(ecoregion_map_raster),xmx=xmax(ecoregion_map_raster),ymx=ymax(ecoregion_map_raster), crs=proj)#build new raster file with projection assigned
res(new_output_raster) <- 100.0  #assign cell resolution
plot(new_output_raster)#plot raster for the fun of it and to see that you don't get your landscape upside down and backwards.
ecoregion_map_raster<-raster(paste(w_dir,IC_map_name,sep=""))
IC_map_df<-as.data.frame(ecoregion_map_raster)
eco_map_name<-"singlecell_point16.tif"
ecoregion_map_raster<-raster(paste(w_dir,eco_map_name,sep=""))
ecoregion_map_raster<-raster(paste(w_dir,eco_map_name,sep=""))
eco_map_df<-as.data.frame(ecoregion_map_raster)
eco_map_df[!is.na(eco_map_df),]<- 0.887732743248389
proj<-projection(IC_map_raster)#projection of landis input file.
proj<-projection(ecoregion_map_raster)#projection of landis input file.
biomass_out_unlist <- as.numeric(unlist(IC_map_df))#unlist the attribute table so that the next step will become a double matrix.
output_matrix<-matrix(biomass_out_unlist,nrow=nrow(ecoregion_map_raster),ncol=ncol(ecoregion_map_raster),byrow=T)#first turn attribute table to double matrix
new_output_raster<-raster(output_matrix,xmn=xmin(ecoregion_map_raster),ymn=ymin(ecoregion_map_raster),xmx=xmax(ecoregion_map_raster),ymx=ymax(ecoregion_map_raster), crs=proj)#build new raster file with projection assigned
res(new_output_raster) <- 100.0  #assign cell resolution
plot(new_output_raster)#plot raster for the fun of it and to see that you don't get your landscape upside down and backwards.
eco_map_df
biomass_out_unlist <- as.numeric(unlist(eco_map_df))#unlist the attribute table so that the next step will become a double matrix.
output_matrix<-matrix(biomass_out_unlist,nrow=nrow(ecoregion_map_raster),ncol=ncol(ecoregion_map_raster),byrow=T)#first turn attribute table to double matrix
new_output_raster<-raster(output_matrix,xmn=xmin(ecoregion_map_raster),ymn=ymin(ecoregion_map_raster),xmx=xmax(ecoregion_map_raster),ymx=ymax(ecoregion_map_raster), crs=proj)#build new raster file with projection assigned
res(new_output_raster) <- 100.0  #assign cell resolution
plot(new_output_raster)#plot raster for the fun of it and to see that you don't get your landscape upside down and backwards.
new_output_file_name<-paste(w_dir,"ParticlekDensity.tif",sep="")
plot(new_output_raster)
rast_IC_map<-writeRaster(new_output_raster, filename=new_output_file_name, datatype='FLT8S',overwrite=TRUE)#This will write a raster that should line up correctly with your input raster
print("done")
dir<-dir <- "I:/Research/Shares/lucash_lab/Lucash/Landis_Documents_Testing/DAMM_Testing/ExampleFile_SC_DAMM/"
dir<-dir <- "I:/Research/Shares/lucash_lab/Lucash/Landis_Documents_Testing/DAMM_Testing/ExampleFile_SC_DAMM/"
monthly_data<-read.csv(paste(dir, "NECN-succession-monthly-log.csv"))
monthly_data<-read.csv(paste(dir, "NECN-succession-monthly-log.csv"), sep="")
monthly_data<-read.csv(paste(dir, "NECN-succession-monthly-log.csv", sep=""))
monthly_data_means<-aggregate(monthly_data, FUN=means)
head(monthly_data)
temp_summary<-aggregate(avgResp ~ Month + Time, monthly_data, mean)
temp_summary
dir<-dir <- "I:/Research/Shares/lucash_lab/Lucash/Alaska_Reburns_Project/DAMM/"
AK_reburns_dir<-dir <- "I:/Research/Shares/lucash_lab/Lucash/Alaska_Reburns_Project/DAMM/"
Vogelmonthly_data<-read.csv(paste(AK_reburns_dir, "Vogel_soil_resp.csv", sep=""))
head(Vogelmonthly_data)
temp_summary<-aggregate(RH_mg_per_m2h ~ Month, Vogelmonthly_data, mean)
temp_summary<-aggregate(RH_mg_per_m2h ~ month, Vogelmonthly_data, mean)
dir<-dir <- "I:/Research/Shares/lucash_lab/Lucash/Landis_Documents_Testing/DAMM_Testing/ExampleFile_SC_DAMM/"
monthly_data<-read.csv(paste(dir, "NECN-succession-monthly-log.csv", sep=""))
monthly_summary<-aggregate(avgResp ~ Month + Time, monthly_data, mean)
AK_reburns_dir<-dir <- "I:/Research/Shares/lucash_lab/Lucash/Alaska_Reburns_Project/DAMM/"
Vogelmonthly_data<-read.csv(paste(AK_reburns_dir, "Vogel_soil_resp.csv", sep=""))
Vogel_Resp_summary<-aggregate(RH_mg_per_m2h ~ month, Vogelmonthly_data, mean)
dir<-dir <- "I:/Research/Shares/lucash_lab/Lucash/Landis_Documents_Testing/DAMM_Testing/ExampleFile_SC_DAMM/"
monthly_data<-read.csv(paste(dir, "NECN-succession-monthly-log.csv", sep=""))
monthly_summary<-aggregate(avgResp ~ Month + Time, monthly_data, mean)
AK_reburns_dir<-dir <- "I:/Research/Shares/lucash_lab/Lucash/Alaska_Reburns_Project/DAMM/"
Vogelmonthly_data<-read.csv(paste(AK_reburns_dir, "Vogel_soil_resp.csv", sep=""))
Vogel_Resp_summary<-aggregate(RH_mg_per_m2h ~ month, Vogelmonthly_data, mean)
matrix<-merge(monthly_summary, Vogel_Resp_summary, by.x="Month", by.y="month")
head(matrix)
Vogel_gm2<-(Vogel_Resp_summary$RH_mg_per_m2h *730.001)/1000
Vogel_Resp_all<-cbind(Vogel_Resp_summary, Vogel_gm2)
matrix<-merge(monthly_summary, Vogel_Resp_summary, by.x="Month", by.y="month")
head(matrix)
matrix<-merge(monthly_summary, Vogel_Resp_all, by.x="Month", by.y="month")
head(matrix)
plot(matrix$Vogel_gm2 ~ matrix$avgResp)
plot(matrix$Vogel_gm2 ~ matrix$Time)
Vogel_Resp_summary
Vogel_gm2
Vogel_Resp_all
matrix<-merge(monthly_summary, Vogel_Resp_all, by.x="Month", by.y="month")
matrix
Vogel_Resp_summary
monthly_summary
dir<-dir <- "I:/Research/Shares/lucash_lab/Lucash/Landis_Documents_Testing/DAMM_Testing/ExampleFile_SC_DAMM/"
monthly_data<-read.csv(paste(dir, "NECN-succession-monthly-log.csv", sep=""))
monthly_summary<-aggregate(avgResp ~ Month + Time, monthly_data, mean)
AK_reburns_dir<-dir <- "I:/Research/Shares/lucash_lab/Lucash/Alaska_Reburns_Project/DAMM/"
Vogelmonthly_data<-read.csv(paste(AK_reburns_dir, "Vogel_soil_resp.csv", sep=""))
Vogel_Resp_summary<-aggregate(RH_mg_per_m2h ~ month, Vogelmonthly_data, mean)
Vogel_gm2<-(Vogel_Resp_summary$RH_mg_per_m2h *730.001)/1000
Vogel_Resp_all<-cbind(Vogel_Resp_summary, Vogel_gm2)
matrix<-merge(monthly_summary, Vogel_Resp_all, by.x="Month", by.y="month")
matrix
monthly_summary
monthly_data
dir<-dir <- "I:/Research/Shares/lucash_lab/Lucash/Landis_Documents_Testing/DAMM_Testing/ExampleFile_SC_DAMM/"
monthly_data<-read.csv(paste(dir, "NECN-succession-monthly-log.csv", sep=""))
monthly_data
dir<-dir <- "I:/Research/Shares/lucash_lab/Lucash/Landis_Documents_Testing/DAMM_Testing/ExampleFile_SC_DAMM/"
monthly_data<-read.csv(paste(dir, "NECN-succession-monthly-log.csv", sep=""))
monthly_summary<-aggregate(avgResp ~ Month + Time, monthly_data, mean)
AK_reburns_dir<-dir <- "I:/Research/Shares/lucash_lab/Lucash/Alaska_Reburns_Project/DAMM/"
Vogelmonthly_data<-read.csv(paste(AK_reburns_dir, "Vogel_soil_resp.csv", sep=""))
Vogel_Resp_summary<-aggregate(RH_mg_per_m2h ~ month, Vogelmonthly_data, mean)
Vogel_gm2<-(Vogel_Resp_summary$RH_mg_per_m2h *730.001)/1000
Vogel_Resp_all<-cbind(Vogel_Resp_summary, Vogel_gm2)
matrix<-merge(monthly_summary, Vogel_Resp_all, by.x="Month", by.y="month")
matrix
monthly_summary
plot(matrix$Vogel_gm2 ~ matrix$Time)
plot(matrix$Vogel_gm2 ~ matrix$Month)
plot(matrix$Vogel_gm2 ~ matrix$Month, type="o", col="blue")
matrix
lines(matrix$avgResp, type="o", pch=22, lty=2, col="red")
plot(matrix$Vogel_gm2 ~ matrix$Month, type="o", col="blue", ylim=c(0,40))
lines(matrix$avgResp, type="o", pch=22, lty=2, col="red")
matrix
matrix$avgResp
lines(matrix$mg_per_m2h, type="o", pch=22, lty=2, col="red")
plot(matrix$Vogel_gm2 ~ matrix$Month, type="o", col="blue", ylim=c(0,40))
lines(matrix$mg_per_m2h, type="o", pch=22, lty=2, col="red")
lines(matrix$RH_mg_per_m2h, type="o", pch=22, lty=2, col="red")
lines(matrix$avgResp ~ matrix$Month, type="o", pch=22, lty=2, col="red")
plot(matrix$Vogel_gm2 ~ matrix$Month, type="o", col="blue", ylim=c(0,40))
lines(matrix$avgResp ~ matrix$Month, type="o", pch=22, lty=2, col="red")
legend(c("cars","trucks"), cex=0.8,
col=c("blue","red"), pch=21:22, lty=1:2);
legend(c("cars","trucks"), cex=0.8, col=c("blue","red"), pch=21:22, lty=1:2)
legend(0, 50, c("cars","trucks"), cex=0.8, col=c("blue","red"), pch=21:22, lty=1:2)
plot(matrix$Vogel_gm2 ~ matrix$Month, type="o", col="blue", ylim=c(0,40))
lines(matrix$avgResp ~ matrix$Month, type="o", pch=22, lty=2, col="red")
legend(0, 50, c("cars","trucks"), cex=0.8, col=c("blue","red"), pch=21:22, lty=1:2)
legend(0, 50, c("cars","trucks"), cex=1.8, col=c("blue","red"), pch=21:22, lty=1:2)
plot(matrix$Vogel_gm2 ~ matrix$Month, type="o", col="blue", ylim=c(0,50))
lines(matrix$avgResp ~ matrix$Month, type="o", pch=22, lty=2, col="red")
plot(matrix$Vogel_gm2 ~ matrix$Month, type="o", col="blue", ylim=c(0,50))
lines(matrix$avgResp ~ matrix$Month, type="o", pch=22, lty=2, col="red")
legend(1, 95, legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
legend(1, 95, legend=c("Line 1", "Line 2"), col=c("red", "blue"), lty=1:2, cex=0.8)
legend(1, 50, legend=c("Line 1", "Line 2"), col=c("red", "blue"), lty=1:2, cex=0.8)
plot(matrix$Vogel_gm2 ~ matrix$Month, type="o", col="blue", ylim=c(0,50))
lines(matrix$avgResp ~ matrix$Month, type="o", pch=22, lty=2, col="red")
legend(1, 50, legend=c("Line 1", "Line 2"), col=c("red", "blue"), lty=1:2, cex=0.8)
plot(matrix$Vogel_gm2 ~ matrix$Month, type="o", col="blue", ylim=c(0,50))
lines(matrix$avgResp ~ matrix$Month, type="o", pch=22, lty=2, col="red")
legend(1, 50, legend=c("Line 1", "Line 2"), col=c("red", "blue"), lty=1:2, cex=0.8)
legend("topleft", legend=c("Line 1", "Line 2"), col=c("red", "blue"), lty=1:2, cex=0.8)
legend("topleft", legend=c("LANDIS", "Vogel_observed"), col=c("red", "blue"), lty=1:2, cex=0.8)
plot(matrix$Vogel_gm2 ~ matrix$Month, type="o", col="black", ylim=c(0,50))
lines(matrix$avgResp ~ matrix$Month, type="o", pch=22, lty=2, col="red")
legend("topleft", legend=c("LANDIS", "Vogel_observed"), col=c("red", "black"), lty=1:2, cex=0.8)
plot(matrix$Vogel_gm2 ~ matrix$Month, type="o", col="black", ylim=c(0,50), ylab="Observed Resp", xlab="Simulated Respiration")
lines(matrix$avgResp ~ matrix$Month, type="o", pch=22, lty=2, col="red")
legend("topleft", legend=c("LANDIS", "Vogel_observed"), col=c("red", "black"), lty=1:2, cex=0.8)
plot(matrix$Vogel_gm2 ~ matrix$Month, type="o", col="black", ylim=c(0,50), ylab="Respiration", xlab="Month")
lines(matrix$avgResp ~ matrix$Month, type="o", pch=22, lty=2, col="red")
legend("topleft", legend=c("LANDIS", "Vogel_observed"), col=c("red", "black"), lty=1:2, cex=0.8)
